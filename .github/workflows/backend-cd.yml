# This is a basic workflow that is manually triggered

name: Backend Continuous Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  PYTHON_VERSION: 3.12.4
  IMAGE_REPO_NAME: backend
  IMAGE_TAG: latest
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  debug:
    name: Debug AWS Credentials
    steps:
    - name: debugßß
      run: |
        echo "AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}"
        echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}"
  lint:
    name: LINT JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      
      - name: Install Linting Tools and Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv flake8
  
      - name: Install dependencies
        run: |
          pipenv install
  test: 
    name: TEST JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PYTHON_VERSION}}
      
      - name: Install Testing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pytest
  
      - name: Install dependencies
        run: |
          pipenv install
  
      - name: Run Backend Tests
        run: | 
          pipenv run test
  build:
    name: BUILD JOB
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Configure AWS Credentials for Deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login AWS
        uses: aws-actions/amazon-ecr-login@v2
        with: 
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Build and Push Docker Image
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kubectl get svc
          docker build -t ${{env.IMAGE_REPO_NAME}} .
          docker tag ${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}} 066350390945.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
          docker push 066350390945.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
  
      - name: Deploy to AWS EKS
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          cd k8s
          kustomize edit set image backend=066350390945.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
          kustomize build | kubectl apply -f -
